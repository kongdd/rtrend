// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// slope_sen
SEXP slope_sen(const NumericVector& y, Nullable<NumericMatrix> x);
RcppExport SEXP _rtrend_slope_sen(SEXP ySEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type y(ySEXP);
    Rcpp::traits::input_parameter< Nullable<NumericMatrix> >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(slope_sen(y, x));
    return rcpp_result_gen;
END_RCPP
}
// Sf
int Sf(NumericVector x);
RcppExport SEXP _rtrend_Sf(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Sf(x));
    return rcpp_result_gen;
END_RCPP
}
// varS
NumericVector varS(NumericVector x, NumericVector rof, int S);
RcppExport SEXP _rtrend_varS(SEXP xSEXP, SEXP rofSEXP, SEXP SSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rof(rofSEXP);
    Rcpp::traits::input_parameter< int >::type S(SSEXP);
    rcpp_result_gen = Rcpp::wrap(varS(x, rof, S));
    return rcpp_result_gen;
END_RCPP
}
// sgmat_S
arma::mat sgmat_S(int halfwin, int d);
RcppExport SEXP _rtrend_sgmat_S(SEXP halfwinSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type halfwin(halfwinSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(sgmat_S(halfwin, d));
    return rcpp_result_gen;
END_RCPP
}
// sgmat_B
arma::mat sgmat_B(const arma::mat S);
RcppExport SEXP _rtrend_sgmat_B(SEXP SSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type S(SSEXP);
    rcpp_result_gen = Rcpp::wrap(sgmat_B(S));
    return rcpp_result_gen;
END_RCPP
}
// sgmat_wB
arma::mat sgmat_wB(const arma::mat S, const arma::colvec w);
RcppExport SEXP _rtrend_sgmat_wB(SEXP SSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< const arma::colvec >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(sgmat_wB(S, w));
    return rcpp_result_gen;
END_RCPP
}
// smooth_wSG
NumericVector smooth_wSG(const arma::colvec y, int halfwin, int d, Nullable<NumericVector> w);
RcppExport SEXP _rtrend_smooth_wSG(SEXP ySEXP, SEXP halfwinSEXP, SEXP dSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type halfwin(halfwinSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericVector> >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(smooth_wSG(y, halfwin, d, w));
    return rcpp_result_gen;
END_RCPP
}
// smooth_SG
Rcpp::NumericVector smooth_SG(const arma::colvec y, const int halfwin, const int d);
RcppExport SEXP _rtrend_smooth_SG(SEXP ySEXP, SEXP halfwinSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec >::type y(ySEXP);
    Rcpp::traits::input_parameter< const int >::type halfwin(halfwinSEXP);
    Rcpp::traits::input_parameter< const int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(smooth_SG(y, halfwin, d));
    return rcpp_result_gen;
END_RCPP
}
// movmean
NumericVector movmean(const arma::colvec y, int halfwin, bool SG_style, Nullable<NumericVector> w);
RcppExport SEXP _rtrend_movmean(SEXP ySEXP, SEXP halfwinSEXP, SEXP SG_styleSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type halfwin(halfwinSEXP);
    Rcpp::traits::input_parameter< bool >::type SG_style(SG_styleSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericVector> >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(movmean(y, halfwin, SG_style, w));
    return rcpp_result_gen;
END_RCPP
}
// movmean2
NumericVector movmean2(const arma::rowvec& y, int win_left, int win_right, Nullable<NumericVector> w);
RcppExport SEXP _rtrend_movmean2(SEXP ySEXP, SEXP win_leftSEXP, SEXP win_rightSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::rowvec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type win_left(win_leftSEXP);
    Rcpp::traits::input_parameter< int >::type win_right(win_rightSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericVector> >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(movmean2(y, win_left, win_right, w));
    return rcpp_result_gen;
END_RCPP
}
// movmean_2d
arma::mat movmean_2d(arma::mat& mat, int win_left, int win_right);
RcppExport SEXP _rtrend_movmean_2d(SEXP matSEXP, SEXP win_leftSEXP, SEXP win_rightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type mat(matSEXP);
    Rcpp::traits::input_parameter< int >::type win_left(win_leftSEXP);
    Rcpp::traits::input_parameter< int >::type win_right(win_rightSEXP);
    rcpp_result_gen = Rcpp::wrap(movmean_2d(mat, win_left, win_right));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rtrend_slope_sen", (DL_FUNC) &_rtrend_slope_sen, 2},
    {"_rtrend_Sf", (DL_FUNC) &_rtrend_Sf, 1},
    {"_rtrend_varS", (DL_FUNC) &_rtrend_varS, 3},
    {"_rtrend_sgmat_S", (DL_FUNC) &_rtrend_sgmat_S, 2},
    {"_rtrend_sgmat_B", (DL_FUNC) &_rtrend_sgmat_B, 1},
    {"_rtrend_sgmat_wB", (DL_FUNC) &_rtrend_sgmat_wB, 2},
    {"_rtrend_smooth_wSG", (DL_FUNC) &_rtrend_smooth_wSG, 4},
    {"_rtrend_smooth_SG", (DL_FUNC) &_rtrend_smooth_SG, 3},
    {"_rtrend_movmean", (DL_FUNC) &_rtrend_movmean, 4},
    {"_rtrend_movmean2", (DL_FUNC) &_rtrend_movmean2, 4},
    {"_rtrend_movmean_2d", (DL_FUNC) &_rtrend_movmean_2d, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_rtrend(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
